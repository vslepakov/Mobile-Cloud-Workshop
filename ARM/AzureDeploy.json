{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "webAppSvcPlanSize": {
      "type": "string",
      "defaultValue": "F1",
      "metadata": {
        "description": "The instance size of the App Service Plan."
      }
    },
    "webAppSvcPlanSku": {
      "type": "string",
      "allowedValues": [
        "Free",
        "Shared",
        "Basic",
        "Standard",
        "Premium"
      ],
      "defaultValue": "Free",
      "metadata": {
        "description": "The pricing tier of the App Service plan."
      }
    },
    "webAppName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Web App."
      }
    },
    "cosmosDatabaseId": {
      "type": "string",
      "metadata": {
        "description": "The name of the cosmosdb database."
      }
    },
    "photosBlobContainerName": {
      "type": "string",
      "metadata": {
        "description": "The name of the photos blob container."
      }
    },
    "storageQueueName": {
      "type": "string",
      "metadata": {
        "description": "The name of the storage queue"
      }
    },
    "adTenant": {
      "type": "string",
      "metadata": {
        "description": "AD B2C Tenant"
      }
    },
    "adAppId": {
      "type": "string",
      "metadata": {
        "description": "AD B2C Application Id"
      }
    },
    "adPolicy": {
      "type": "string",
      "metadata": {
        "description": "AD B2C Signin/Sign up policy"
      }
    },
    "functionAppName": {
      "type": "string",
      "metadata": {
        "description": "Function app name"
      }
    },
    "computerVisionSku": {
      "type": "string",
      "metadata": {
        "description": "SKU of the computer vision cognitive service"
      }
    }
  },
  "variables": {
    "storageAccountName": "[concat(uniquestring(resourceGroup().id), 'storage')]",
    "databaseAccountName": "[concat(uniquestring(resourceGroup().id), 'cosmosdb')]",
    "wepAppSvcPlanName": "[concat(uniquestring(resourceGroup().id), parameters('webAppName'), 'svcplan')]",
    "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
    "computerVisionAccountName": "[concat(uniquestring(resourceGroup().id), 'computervision')]",
    "computerVisionServiceid": "[concat(resourceGroup().id,'/providers/','Microsoft.CognitiveServices/accounts/', variables('computerVisionAccountName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2016-01-01",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2015-04-08",
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "name": "[variables('databaseAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "name": "[variables('databaseAccountName')]",
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[resourceGroup().location]",
            "failoverPriority": 0
          }
        ]
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-08-01",
      "name": "[variables('wepAppSvcPlanName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[parameters('webAppSvcPlanSize')]",
        "tier": "[parameters('webAppSvcPlanSku')]",
        "capacity": 1
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2015-08-01",
      "name": "[parameters('webAppName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverFarms/', variables('wepAppSvcPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('databaseAccountName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]"
      ],
      "properties": {
        "name": "[parameters('webAppName')]",
        "serverFarmId": "[variables('wepAppSvcPlanName')]",
        "siteConfig": {
          "phpVersion": "off",
          "appSettings": [
            {
              "name": "AzureCosmosDb:Endpoint",
              "value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', variables('databaseAccountName'))).documentEndpoint]"
            },
            {
              "name": "AzureCosmosDb:Key",
              "value": "[listKeys(resourceId('Microsoft.DocumentDb/databaseAccounts', variables('databaseAccountName')), '2015-04-08').primaryMasterKey]"
            },
            {
              "name": "AzureCosmosDb:DatabaseId",
              "value": "[parameters('cosmosDatabaseId')]"
            },
            {
              "name": "AzureStorage:Key",
              "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
            },
            {
              "name": "AzureStorage:StorageAccountName",
              "value": "[variables('storageAccountName')]"
            },
            {
              "name": "AzureStorage:PhotosBlobContainerName",
              "value": "[parameters('photosBlobContainerName')]"
            },
            {
              "name": "AzureStorage:QueueName",
              "value": "[parameters('storageQueueName')]"
            },
            {
              "name": "ActiveDirectory:Tenant",
              "value": "[parameters('adTenant')]"
            },
            {
              "name": "ActiveDirectory:ApplicationId",
              "value": "[parameters('adAppId')]"
            },
            {
              "name": "ActiveDirectory:SignUpSignInPolicy",
              "value": "[parameters('adPolicy')]"
            }
          ]
        }
      }
    },
    {
      "apiVersion": "2015-08-01",
      "type": "Microsoft.Web/sites",
      "name": "[parameters('functionAppName')]",
      "location": "[resourceGroup().location]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('wepAppSvcPlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/', variables('databaseAccountName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.CognitiveServices/accounts', variables('computerVisionAccountName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('wepAppSvcPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsDashboard",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~1"
            },

            {
              "name": "CosmosDb",
              "value": "TODO"
            },
            {
              "name": "Ocp-Apim-Subscription-Key",
              "value": "[listKeys(variables('computerVisionServiceid'),'2016-02-01-preview').key1]"
            },
            {
              "name": "ComputerVisionEndpoint",
              "value": "[reference(variables('computerVisionServiceid'),'2016-02-01-preview').endpoint]"
            }
          ]
        }
      }
    },

    {
      "type": "Microsoft.CognitiveServices/accounts",
      "sku": {
        "name": "[parameters('computerVisionSku')]"
      },
      "kind": "ComputerVision",
      "name": "[variables('computerVisionAccountName')]",
      "apiVersion": "2016-02-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {},
      "dependsOn": []
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    }
  }
}